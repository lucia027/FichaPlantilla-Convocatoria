plugins {
    id 'java'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.9.23'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.9.23'
    id 'jacoco'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.2'
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'org.example.fichaplantillaconvocatoria'
    mainClass = 'org.example.fichaplantillaconvocatoria.HelloApplication'
}
kotlin {
    jvmToolchain(21)
}


javafx {
    version = '21'
    modules = ['javafx.controls', 'javafx.fxml']
}



dependencies {

    //H2
    implementation 'com.h2database:h2:2.2.224'

    //JDBI
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("org.jdbi:jdbi3-core:3.48.0")
    implementation("org.jdbi:jdbi3-sqlobject:3.48.0")
    implementation("org.jdbi:jdbi3-kotlin:3.48.0")
    implementation("org.jdbi:jdbi3-kotlin-sqlobject:3.48.0")

    //Cache Caffeine
    implementation("com.github.ben-manes.caffeine:caffeine:3.2.0")

    //Dokka
    implementation("org.jetbrains.dokka:dokka-gradle-plugin:2.0.0")

    //Logger
    implementation("org.lighthousegames:logging:1.5.0")
    implementation("ch.qos.logback:logback-classic:1.5.12")

    //Serializable JSON
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.0")

    //Result
    implementation("com.michael-bull.kotlin-result:kotlin-result:2.0.1")

    //Mockito (test)
    testImplementation "org.mockito.kotlin:mockito-kotlin:5.2.1"
    testImplementation("org.mockito:mockito-junit-jupiter:5.12.0")

    // Open Brwoser
    implementation("com.vaadin:open:8.5.0.4")

    // Jacoco (test) --> AUN POR CONFIGURAR
    implementation("org.jacoco:org.jacoco.core:0.8.12")

    //Test
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    testImplementation("org.jetbrains.kotlin:kotlin-test:1.9.23")

    // Koin
    implementation("io.insert-koin:koin-core:3.5.3")
    implementation("io.insert-koin:koin-core-ext:3.0.2")

    //BCrypt
    implementation("org.mindrot:jbcrypt:0.4")
}

test {
    useJUnitPlatform()
    modularity.inferModulePath = false

}

jar {
    manifest {
        attributes 'Main-Class': 'org.example.fichaplantillaconvocatoria.plantilla.cache'
    }
    from {
        configurations["compileClasspath"].collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}